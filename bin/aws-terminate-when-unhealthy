#!/bin/bash
source `dirname $0`/../lib/as.inc
source `dirname $0`/../lib/elb.inc
source `dirname $0`/../lib/service.inc
source `dirname $0`/../lib/system.inc

INFO='true'
INFO_FILE='/dev/null'
DEBUG='true'
DEBUG_FILE='/dev/null'
DRY_RUN='true'
INSTANCE_ID=`systemGetMeta instance-id`
ELB="test-lb"
AS="test-as"
OUT_OF_SERVICE_THRESHOLD=300                # shut down instance if it's been out of service for over 5 minutes
OUT_OF_SERVICE_PRECAUTION_THRESHOLD=1200    # spin up another instance as a precaution if its been offline 20 minutes.
BOOTED="true"                               # command to determine if instance is booted.
ELB_TMP_FILE=`mktemp -t terminate_test_elb.XXXXX`
AS_TMP_FILE=`mktemp -t terminate_test_as.XXXXX`
PID_FILE="/var/run/aws-terminate-when-unhealthy"
START_TIME=`date +%s`
EMAIL_RCPT="/dev/null"

if ! systemBootComplete; then systemCleanup; exit 1; fi
if ! systemCreateLock; then systemCleanup; exit 1; fi
if ! elbPrimeData; then systemCleanUp; exit 1; fi
if ! asPrimeData; then systemCleanUp; exit 1; fi
if ! asMember; then systemCleanUp; exit 0; fi
if ! elbMember; then systemCleanUp; exit 0; fi

while elbOutOfService; do
  if serviceOutOfService; then
    asRemoveInstance && systemSendEmail "Terminating Instance" "Time to self destruct."
    systemCleanUp
    exit 0
  elif serviceMaybeOutOfService; then
    asAddInstance && systemSendEmail "Booting instance" "Booting another instances as a precaution."
  fi

  systemInfo "$INSTANCE_ID is out of service. Sleeping to see what happens."

  sleep `serviceRetryInterval`
  elbPrimeData
  asPrimeData
done

systemCleanUp
# vim: ai ts=2 sw=2 et sts=2 ft=sh
