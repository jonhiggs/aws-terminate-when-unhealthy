#! /bin/sh
testServiceGetTimeLastHealthy() {
  echo 60 > $SERVICE_FILE
  assertEquals "Instance is healthy" "60" `serviceGetTimeLastHealthy`

  echo "2000000" > $SERVICE_FILE
  assertEquals "Instance is not healthy" "2000000" `serviceGetTimeLastHealthy`

  rm $SERVICE_FILE
  assertEquals "Instance has never been healthy" "0" `serviceGetTimeLastHealthy`
}

testServiceUpdateTimeLastHealthy() {
  serviceUpdateTimeLastHealthy
  assertTrue "attempt to update the time last in service" "egrep '[0-9]{10}' $SERVICE_FILE"
}

oneTimeSetUp() {
  # load include to test
  . ../lib/service.inc
  SERVICE_FILE=`mktemp -t terminate_test`
}

oneTimeTearDown() {
  rm -f $TMP_FILE
}

# load and run shUnit2
. ./shunit/src/shunit2

# vim: ai ts=2 sw=2 et sts=2 ft=sh
