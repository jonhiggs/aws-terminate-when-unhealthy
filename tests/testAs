#! /bin/sh

testAsCountInstances() {
  assertEquals "count instances" "4" `asCountInstances`
}

testAsCountHealthyInstances() {
  assertEquals "count healthy instances" "4" `asCountHealthyInstances`
}

testAsAllInstancesInElb() {
  assertTrue "there should be equal instances in elb and as" "asAllInstancesInElb"

  cat > $AS_TMP_FILE <<EOF
AUTO-SCALING-GROUP  my-as-group  my-current-launch-config  eu-west-1a,eu-west-1c  whatever-this-is  2  8  4
INSTANCE  i-aaaaaaaa  eu-west-1a  InService  Healthy  my-current-launch-config
INSTANCE  i-bbbbbbbb  eu-west-1c  InService  Healthy  my-current-launch-config
INSTANCE  i-cccccccc  eu-west-1c  InService  Healthy  my-current-launch-config
INSTANCE  i-dddddddd  eu-west-1c  InService  Healthy  my-old-launch-config
INSTANCE  i-ffffffff  eu-west-1c  InService  Healthy  my-old-launch-config
EOF
  assertFalse "there should be equal instances in elb and as" "asAllInstancesInElb"
}

testAsPrimeData() {
  AS_TMP_FILE2=$AS_TMP_FILE
  unset AS_TMP_FILE
  assertFalse "return false if \$AS_TMP_FILE is unset" `asPrimeData`
  AS_TMP_FILE=$AS_TMP_FILE2

  AS2=$AS
  unset AS
  assertFalse "return false if \$AS is unset" `asPrimeData`
  AS=$AS2
}

oneTimeSetUp() {
  # load include to test
  . ../lib/elb.inc
  . ../lib/as.inc
  AS="my-as-group"
  AS_TMP_FILE=`mktemp -t terminate_test_as`

  ELB="FAKEELB"
  ELB_TMP_FILE=`mktemp -t terminate_test_elb`
}

setUp() {
  # PRIME THE AS_TMP_FILE
  cat > $AS_TMP_FILE <<EOF
AUTO-SCALING-GROUP  my-as-group  my-current-launch-config  eu-west-1a,eu-west-1c  whatever-this-is  2  8  4
INSTANCE  i-aaaaaaaa  eu-west-1a  InService  Healthy  my-current-launch-config
INSTANCE  i-bbbbbbbb  eu-west-1c  InService  Healthy  my-current-launch-config
INSTANCE  i-cccccccc  eu-west-1c  InService  Healthy  my-current-launch-config
INSTANCE  i-dddddddd  eu-west-1c  InService  Healthy  my-old-launch-config
EOF

  # PRIME THE ELB_TMP_FILE
  cat > $ELB_TMP_FILE <<EOF
INSTANCE_ID  i-aaaaaaaa  InService  N/A  N/A
INSTANCE_ID  i-bbbbbbbb  OutOfService  N/A  N/A
INSTANCE_ID  i-cccccccc  InService  N/A  N/A
INSTANCE_ID  i-dddddddd  InService  N/A  N/A
EOF
}

oneTimeTearDown() {
  rm -f $AS_TMP_FILE
}

# load and run shUnit2
. ./shunit/src/shunit2

# vim: ai ts=2 sw=2 et sts=2 ft=sh
